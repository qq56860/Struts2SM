<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop" xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring" xsi:schemaLocation="http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring-1.2.xsd
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.1.xsd
        http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.1.xsd
        http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.1.xsd">
    
    <!-- 加载配置文件 -->
    <!-- <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:config/jdbc.properties</value>
                <value>classpath:config/mail.properties</value>
            </list>
        </property>
    </bean> -->
    
    
    <!-- 1、配置数据源 -->
    <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">

        <!-- 配置基本属性 -->
        <property name="driverClassName" value="com.mysql.jdbc.Driver" />
        <property name="url" value="jdbc:mysql://118.212.149.56:3306/ceshi_yunqitong_oss" />
        <property name="username" value="root" />
        <property name="password" value="linkdata" />

        <!-- 配置连接初始化大小、最小、最大 -->
        <property name="initialSize" value="5" />
        <property name="minIdle" value="5" />
        <property name="maxActive" value="20" />

        <!-- 配置获取连接等待超时的时间 -->
        <property name="maxWait" value="60000" />

        <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
        <property name="timeBetweenEvictionRunsMillis" value="3600000" />

        <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
        <property name="minEvictableIdleTimeMillis" value="3600000" />
        
        <!-- 在每次空闲连接回收器线程(如果有)运行时检查的连接数量-->
        <property name="numTestsPerEvictionRun" value="3" />

        <!-- 打开PSCache，并且指定每个连接上PSCache的大小 -->
        <property name="poolPreparedStatements" value="true" />

        <!-- 用来检测连接是否有效的sql，要求是一个查询语句。如果validationQuery为null，testOnBorrow、testOnReturn、testWhileIdle都不会其作用 -->
        <property name="validationQuery" value="SELECT 1" />

        <!-- 申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效 -->
        <property name="testWhileIdle" value="true" />

        <!-- 申请连接时执行validationQuery检测连接是否有效，设置为false，默认是true，value值为true时候配置会降低性能7-10倍 -->
        <property name="testOnBorrow" value="false" />

        <!-- 归还连接时执行validationQuery检测连接是否有效，做了这个配置会降低性能 -->
        <property name="testOnReturn" value="false" />
        
        <!-- 连接泄漏回收参数，当可用连接数少于3个时才执行 -->
        <property name="removeAbandoned" value="true" />
        
        <!-- 连接泄漏回收参数，180秒，泄露的连接可以被删除的超时值 -->
        <property name="removeAbandonedTimeout" value="180" />
        

        <!-- 配置监控统计拦截的filters -->
<!--         <property name="filters" value="slf4j" /> -->
    </bean>
    
    
    <!-- 2、配置sqlSessionFactory -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean" scope="prototype" >
        <!-- 加载数据源 -->
        <property name="dataSource" ref="dataSource"></property>
        <!-- 加载MyBatis配置文件 -->
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
        <!-- 加载mapper,存放sql的xml的路径-->
        <property name="mapperLocations" value="classpath*:cn.mapper/*Mapper.xml" /><!-- Mapper.xml文件中的namespace的值是dao接口的全路径类  -->
        
    </bean>
    
    

    <!-- 4、采用自动扫描方式创建mapper(dao) bean -->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <property name="basePackage" value="cn.mapper" />
    </bean> 

    
    
    
    
    <!-- 5、加载Service组件 ,需要在Service的实现类Impl上方添加注解@Service，否则会报异常-->
   <!--  <context:component-scan  base-package="cn.service"></context:component-scan> -->
    
    
    
    
    
    
    
    <!-- 6、配置事务管理器 -->
    <!-- MyBatis默认使用Spring JDBC的事务管理器 -->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
    
    <!-- 7、拦截器方式配置事物 -->
    <tx:advice id="transactionAdvice" transaction-manager="transactionManager">
        <tx:attributes>
            <tx:method name="insert*" propagation="REQUIRED"  rollback-for="Exception" />
            <tx:method name="update*" propagation="REQUIRED"  rollback-for="Exception" />
            <tx:method name="delete*" propagation="REQUIRED"  rollback-for="Exception" />
            <tx:method name="save*" propagation="REQUIRED"  rollback-for="Exception" />
            <tx:method name="add*" propagation="REQUIRED"  rollback-for="Exception" />
            <tx:method name="append*" propagation="REQUIRED"  rollback-for="Exception" />
            <tx:method name="modify*" propagation="REQUIRED"  rollback-for="Exception" />
            <tx:method name="edit*" propagation="REQUIRED"  rollback-for="Exception" />
            <tx:method name="remove*" propagation="REQUIRED"  rollback-for="Exception" />
            <tx:method name="init" propagation="REQUIRED"  rollback-for="Exception" />
            <tx:method name="delAndInit" propagation="REQUIRED"  rollback-for="Exception" />

            <tx:method name="select*" propagation="SUPPORTS" read-only="true" />
            <tx:method name="get*" propagation="SUPPORTS" read-only="true" />
            <tx:method name="find*" propagation="SUPPORTS" read-only="true" />
            <tx:method name="load*" propagation="SUPPORTS" read-only="true" />
            <tx:method name="search*" propagation="SUPPORTS" read-only="true" />
            <tx:method name="datagrid*" propagation="SUPPORTS" read-only="true" />

            <tx:method name="*" propagation="REQUIRED"  rollback-for="Exception" />
        </tx:attributes>
    </tx:advice>
    
    

</beans>